const [openDate, setOpenDate ] = useState(false);
<label>Check-in Date</label>
<span onClick={()=>setOpenDate(!openDate)}>
  {`${format(date[0].startDate,"MM/dd/yyyy")} 
  to ${format(date[0].endDate,"MM/dd/yyyy")} `}
  </span>
  
  
  {openDate && (
    <DateRange 
    onChange={(item)=>setDate([item.selection])}
    minDate={new Date()}
    ranges={date}         
    />
    )}
    </div>

    =========================

    {  type !== "list" &&
        
        <> </>
}

const [date, setDate] = useState([
        {
          startDate: new Date(),
          endDate: new Date(),
          key: 'selection'
        }
      ]);

      <div className="headerSearchItem">
        <FontAwesomeIcon icon={faCalendarDays} className="headericon" />
        <span onClick={()=>setOpenDate(!openDate)} 
            className='headerSearchText'>{`${format(date[0].startDate,"MM/dd/yyyy")} 
            to ${format(date[0].endDate,"MM/dd/yyyy")} `}</span>
        {openDate && <DateRange
editableDateInputs={true}
onChange={item => setDate([item.selection])}
moveRangeOnFirstSelection={false}
ranges={date}
className="date"
/>}

      const [options, setOptions] = useState({
        adult:1,
        children:0,
        room:1,
    });

    const handleOption = (name,operation)=>{
        setOptions(prev=>{return{
                    ...prev, [name]: operation ==="i" ? options[name] + 1 : options[name] -1
        }})
    }
    const navigate = useNavigate();
    const handleSearch = ()=>{
        navigate("/hotels",{state:{destination,date,options}})
    }

    <div className="headerSearchItem">
        <FontAwesomeIcon icon={faPerson} className="headericon" />
        <span onClick={()=>setOpenOptions(!openOptions)} className='headerSearchText'>{`${options.adult} adult - ${options.children} children - ${options.room} room`}</span>
        {  openOptions && 
        
        <div className="options">


            <div className="optionItem">
                <span className="optionText">Adult</span>
                <div className="optionCounter">
                <button disabled={options.adult <= 1} className='optionCounterButton' onClick={()=>handleOption("adult","d")}>-</button>
                <span className='optionCounterNumber'>{options.adult}</span>
                <button className='optionCounterButton'  onClick={()=>handleOption("adult","i")}>+</button>
                </div>
            </div>

            const List = () => {
                const location = useLocation();
                const[destination,setDestination] = useState(location.state.destination);
                const [date,setDate] = useState(location.state.date);
                const [options,setOptions] = useState(location.state.options);
                const [openDate,setOpenDate] = useState(false);